connection_string <- "Driver=SQL Server; Server=MS; Database=ML; Trusted_Connection=yes"
local <- RxLocalParallel()
rxSetComputeContext(local)
train_columns <- c(id = "numeric",
cycle = "numeric",
setting1 = "numeric",
setting2 = "numeric",
setting3 = "numeric",
s1 = "numeric",
s2 = "numeric",
s3 = "numeric",
s4 = "numeric",
s5 = "numeric",
s6 = "numeric",
s7 = "numeric",
s8 = "numeric",
s9 = "numeric",
s10 = "numeric",
s11 = "numeric",
s12 = "numeric",
s13 = "numeric",
s14 = "numeric",
s15 = "numeric",
s16 = "numeric",
s17 = "numeric",
s18 = "numeric",
s19 = "numeric",
s20 = "numeric",
s21 = "numeric")
train_file <- "PM_Train.csv"
train_data_text <- RxTextData(file = train_file, colClasses = train_columns)
train_table_name <- "PredictiveMaintenance.PM_Train"
train_data_table <- RxSqlServerData(table = train_table_name,
connectionString = connection_string,
colClasses = train_columns)
rxDataStep(inData = train_data_text,
outFile = train_data_table,
overwrite = TRUE)
test_data_text <- RxTextData(file = test_file, colClasses = train_columns)
test_file <- "PM_Test.csv"
test_file <- "PM_Test.csv"
test_data_text <- RxTextData(file = test_file, colClasses = train_columns)
test_table_name <- "PredictiveMaintenance.PM_Test"
test_data_table <- RxSqlServerData(table = test_table_name,
connectionString = connection_string,
colClasses = train_columns)
rxDataStep(inData = test_data_text,
outFile = test_data_table,
overwrite = TRUE)
truth_file <- "PM_Truth.csv"
truth_columns <- c(RUL = "numeric")
truth_data_text <- RxTextData(file = truth_file, colClasses = truth_columns)
truth_table_name <- "PredictiveMaintenance.PM_Truth"
truth_data_table <- RxSqlServerData(table = truth_table_name,
connectionString = connection_string,
colClasses = truth_columns)
rxDataStep(inData = truth_data_text,
outFile = truth_data_table,
overwrite = TRUE)
head(train_data_text)
truth_file <- "PM_Truth.csv"
truth_columns <- c(RUL = "numeric")
truth_data_text <- RxTextData(file = truth_file, colClasses = truth_columns)
truth_table_name <- "PredictiveMaintenance.PM_Truth"
truth_data_table <- RxSqlServerData(table = truth_table_name,
connectionString = connection_string,
colClasses = truth_columns)
rxDataStep(inData = truth_data_text,
outFile = truth_data_table,
overwrite = TRUE)
length(train_columns)
train_table <- rxImport(train_data_table)
train_data_table
head(train_table)
rxGetInfo(train_table)
rxGetInfo(train_table, getVarInfo = TRUE)
rxGetInfo(train_table, getVarInfo = TRUE, numRows = 5)
rxGetInfo(data = train_table)
rxGetInfo(data = train_table, getVarInfo = TRUE, numRows = 5)
rxSummary( ~ ., train_table)
rxSummary(formula =  ~ ., data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "ValidObs"))
rxSummary(formula =  ~ ., data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = cycle ~ id, data = train_table)
rxSummary(formula = cycle ~ F(id), data = train_table)
rxSummary(formula = cycle ~ F(id), data = train_table, summaryStats = c("Min", "Max"))
rxSummary(formula = s1 ~ ., data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = s1~ ., data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ s1, data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ c(s1,s2), data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ s1,s2, data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ s1:s2, data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ id:s2, data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ id, data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ c("id"), data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ cycle, data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ cycle, data = train_table)
rxSummary(formula =  ~ ., data = train_table, summaryStats = c("Mean", "StdDev", "Min", "Max", "MissingObs"))
rxSummary(formula = ~ cycle, data = train_table)
rxSummary(formula = cycle ~ F(id), data = train_table, summaryStats = c("Min", "Max"))
rxHistogram(~s11,train_table)
rxHistogram(~cycle,train_table)
rxHistogram(~s11,train_table)
rxHistogram(formula = ~s11,data = train_table)
rxHistogram(formula = ~s11,data = train_table, numBreaks = 100)
2
rxHistogram(formula = ~s11,data = train_table, numBreaks = 200)
rxHistogram(formula = ~s11,data = train_table, numBreaks = 50)
rxHistogram( ~ s11 | F(id), type = "p", data = train_table)
rxHistogram( ~ s11 | F(id), data = train_table, type = "p")
rxHistogram( ~ s11 | F(id), data = train_table)
rxHistogram(formula = ~ s11 | F(id), data = train_table)
rxLinePlot(s11~cycle|id,train_table)
rxLinePlot(formula = s11~cycle, data = train_table)
rxLinePlot(formula = s11~id, data = train_table)
rxLinePlot(formula = s11~cycle|id, data = train_table)
