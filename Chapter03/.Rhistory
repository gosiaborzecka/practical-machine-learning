library(dplyr)
library(ggplot2)
library(Kmisc)
library(gridExtra)
url_file <-  "http://archive.ics.uci.edu/ml/machine-learning-databases/mushroom/agaricus-lepiota.data"
mushrooms <- read.csv(url(url_file), header=FALSE)
dim(mushrooms)
str(mushrooms)
fields <- c("class",
"cap_shape",
"cap_surface",
"cap_color",
"bruises",
"odor",
"gill_attachment",
"gill_spacing",
"gill_size",
"gill_color",
"stalk_shape",
"stalk_root",
"stalk_surface_above_ring",
"stalk_surface_below_ring",
"stalk_color_above_ring",
"stalk_color_below_ring",
"veil_type",
"veil_color",
"ring_number",
"ring_type",
"spore_print_color",
"population",
"habitat")
colnames(mushrooms) <- fields
levels(mushrooms$class) <- c("edible", "poisonous")
levels(mushrooms$cap_shape) <- c("bell", "conical", "flat", "knobbed", "sunken", "convex")
levels(mushrooms$cap_color) <- c("buff", "cinnamon", "red", "gray", "brown", "pink",
"green", "purple", "white", "yellow")
levels(mushrooms$cap_surface) <- c("fibrous", "grooves", "scaly", "smooth")
levels(mushrooms$bruises) <- c("no", "yes")
levels(mushrooms$odor) <- c("almond", "creosote", "foul", "anise", "musty", "none", "pungent", "spicy", "fishy")
levels(mushrooms$gill_attachment) <- c("attached", "free")
levels(mushrooms$gill_spacing) <- c("close", "crowded")
levels(mushrooms$gill_size) <- c("broad", "narrow")
levels(mushrooms$gill_color) <- c("buff", "red", "gray", "chocolate", "black", "brown", "orange",
"pink", "green", "purple", "white", "yellow")
levels(mushrooms$stalk_shape) <- c("enlarging", "tapering")
levels(mushrooms$stalk_root) <- c("missing", "bulbous", "club", "equal", "rooted")
levels(mushrooms$stalk_surface_above_ring) <- c("fibrous", "silky", "smooth", "scaly")
levels(mushrooms$stalk_surface_below_ring) <- c("fibrous", "silky", "smooth", "scaly")
levels(mushrooms$stalk_color_below_ring) <- c("buff", "cinnamon", "red", "gray", "brown", "pink",
"green", "purple", "white", "yellow")
levels(mushrooms$veil_type) <- "partial"
levels(mushrooms$veil_color) <- c("brown", "orange", "white", "yellow")
levels(mushrooms$ring_number) <- c("none", "one", "two")
levels(mushrooms$ring_type) <- c("evanescent", "flaring", "large", "none", "pendant")
levels(mushrooms$stalk_color_above_ring) <- c("buff", "cinnamon", "red", "gray", "brown", "pink",
"green", "purple", "white", "yellow")
levels(mushrooms$spore_print_color) <- c("buff", "chocolate", "black", "brown", "orange",
"green", "purple", "white", "yellow")
levels(mushrooms$population) <- c("abundant", "clustered", "numerous", "scattered", "several", "solitary")
levels(mushrooms$habitat) <- c("wood", "grasses", "leaves", "meadows", "paths", "urban", "waste")
str(mushrooms)
head(mushrooms)
sum(complete.cases(mushrooms))
class <- plyr::count(mushrooms$class)
print(sprintf("Edible: %d | Poisonous: %d | Percent of poisonous classes: %.1f%%",class$freq[1],class$freq[2], round(class$freq[1]/nrow(mushrooms)*100,1)))
mush_features <- colnames(mushrooms)[-1]
table_res <- lapply(mush_features, function(x) {table(mushrooms$class, mushrooms[,x])})
names(table_res) <- mush_features
table_res
table_res$ring_type
table_res$odor
ggplot(mushrooms, aes(x = class, y = odor)) +
geom_jitter(alpha = 0.5)
features = mushrooms[,2:23]
label = mushrooms[,1]
features <- sapply(features, function (x) as.numeric(as.factor(x)))
scales <- list(x=list(relation="free"),y=list(relation="free"), cex=0.6)
featurePlot(x=features, y=label, plot="density",scales=scales,
layout = c(4,6), auto.key = list(columns = 2), pch = "|")
library(dplyr)
library(ggplot2)
library(Kmisc)
library(gridExtra)
featurePlot(x=features, y=label, plot="density",scales=scales,
layout = c(4,6), auto.key = list(columns = 2), pch = "|")
library(caret)
featurePlot(x=features, y=label, plot="density",scales=scales,
layout = c(4,6), auto.key = list(columns = 2), pch = "|")
ggplot(mushrooms, aes(x = cap_surface, y = ring_type, col = class, shape = class)) +
geom_jitter(alpha = 0.5) +
scale_color_manual(breaks = c("edible", "poisonous"),
values = c("green", "red"))
table_res$odor
entropy(table_res$odor, unit="log2")/ log2(9)
library(entropy)
entropy(table_res$odor, unit="log2")/ log2(9)
library("DescTools")
install.packages("DescTools");
library("DescTools")
NCOT = table(TM$NumberCarsOwned)
NCOT = table(table_res$odor)
print(c(DescTools::Entropy(NCOT), log2(5), DescTools::Entropy(NCOT) / log2(5)))
entropy(table_res$odor, unit="log2")/ log2(9)
entropy(table_res$odor, unit="log2")
